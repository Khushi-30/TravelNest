<% layout("/layouts/boilerplate") %>
        <div class="row" >
            <div class="col-8 offset-3">
                <h3 class="card-title" >
                    <%= list.title %>
                </h3>
                <div class="card mt-3 mb-3" style="width: 42vw;" >
                    <img src="<%= list.image.url %>" class="card-img-top" alt="Oops..." style="height: 18rem;">
                    <i class="ms-auto" style="font-size: larger;">~<%= list.owner.username %></i>
                    <div class="card-body mt-3">            
                        <p class="card-text">
                            <%= list.description %>
                        </p>
                    </div>
                    <ul class="list-group list-group-flush mt-3 mb-3">
                        <li class="list-group-item">Price : <%= list.price%>
                        </li>
                        <li class="list-group-item">Location : <%= list.location %>
                        </li>
                        <li class="list-group-item">Country : <%= list.country %>
                        </li>
                    </ul>
                    <% if(cuser && list.owner._id.equals(cuser._id)) {%>
                    <div class="card-body show-btns">
                        <form method="GET" action="/testing/<%= list._id %>/edit">
                            <button class="btn btn-dark s-btn">Edit list</button>
                        </form>
                        <form method="POST" action="/testing/<%=list._id%>?_method=DELETE">
                            <button class="btn btn-dark">Delete list</button>
                        </form>
                    </div>
                    <% } %>
                    <br />
                    <hr>
                </div>
            </div>
            <div class="col-8 offset-3" style="width: 32rem;">
                <% if(cuser) {%>
                <h3 class="mb-3">Leave comment</h3>
                <form action="/testing/<%= list._id %>/review" method="POST" class="needs-validation" novalidate>
                    <fieldset class="starability-slot">
                        <legend style="font-size: medium;">Rating</legend>
                        <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                        <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                        <label for="first-rate1" title="Terrible">1 star</label>
                        <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                        <label for="first-rate2" title="Not good">2 stars</label>
                        <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                        <label for="first-rate3" title="Average">3 stars</label>
                        <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                        <label for="first-rate4" title="Very good">4 stars</label>
                        <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                        <label for="first-rate5" title="Amazing">5 stars</label>
                    </fieldset>

                    <div class="form-group mb-3">
                        <label for="comment" class="mt-3 mb-2">Comment</label>
                        <textarea class="form-control" name="review[comment]" id="comment" placeholder="Enter your comment" rows="5" required></textarea>
                        <div class="invalid-feedback">Please provide a comment.</div>
                    </div>
                    <button class="btn btn-dark mb-4">Submit</button>
                </form> 
                <hr>
                <% } %> 
                
                <h3 class="mt-4">Comments</h3>
                <div class="row mb-5">
                    <% for(let r of list.reviews) { %>
                        <div class="r-card mt-3 ms-2" style="width: 15rem;">
                            <div class="r-card-body">
                                <h6 class="card-title mt-2 mb-3">@<%=r.author.username%></h6>
                                <div class="starability-result card-text mb-2" data-rating=<%= r.rating %>></div>
                                <div class="card-text mb-3"><%= r.comment %></div>                                
                                <form method="POST" action="/testing/<%=list._id%>/review/<%=r._id%>?_method=DELETE">
                                    <% if(cuser) {%>
                                    <button class="btn btn-dark mb-2">Delete</button>
                                    <% } %>
                                </form>
                            </div>
                        </div>
                    <% } %>   
                </div> 
                <hr>
            </div>
            <div class="col-8 offset-3">
                <br>
                <h3>Where you will be...</h3>
                <br>
            </div>
            <div id="map"></div>
        </div>

  

<script>
  // Function to get coordinates from location and country
  async function getCoordinates(loc, coun) {
    const query = `${loc}, ${coun}`;
    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&addressdetails=1&limit=1`;

    try {
      const response = await fetch(url);
      const data = await response.json();
      if (data && data.length > 0) {
        const lat = parseFloat(data[0].lat);
        const lon = parseFloat(data[0].lon);
        return { lat, lon };
      } else {
        throw new Error('Location not found');
      }
    } catch (error) {
      console.error('Error fetching coordinates:', error);
      return null;
    }
  }

  // Initialize the map with default coordinates
  const map = L.map('map').setView([0, 0], 2);  // Initial global view
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '&copy; OpenStreetMap contributors'
  }).addTo(map);

  // Injected values for location and country
  const loc = "<%= list.location %>"; // Ensure that this is correctly rendered by your templating engine
  const coun = "<%= list.country %>";   // Same for country

  // Get coordinates and update the map
  getCoordinates(loc, coun).then(coords => {
    if (coords) {
      map.setView([coords.lat, coords.lon], 13);  // Center map on the location
      L.marker([coords.lat, coords.lon]).addTo(map)
        .bindPopup(`Marker in ${loc}, ${coun}!`)
        .openPopup();
    } else {
      alert("Location not found!");
    }
  });
</script>

  